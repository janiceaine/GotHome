@model PrivacyViewModel

@{
    ViewData["Title"] = "Privacy Policy";
}

<h1>@ViewData["Title"]</h1>

<p>Use this page to detail your site's privacy policy.</p>

        <input
          id="home-address"
          name="home-address"
          required
          autocomplete="off"
        />
         <input
          id="event-address"
          name="event-address"
          required
          autocomplete="off"
        />
     <div id="tracking-status"></div><button id="stop-tracking" onclick="stopTrackingNow()" class="btn btn-primary">Stop Tracking</button>
<div id="map" style="height:500px;width:100%;"></div>


@section Scripts {
    <!-- Load Google Maps API with marker library -->
    <script async src="https://maps.googleapis.com/maps/api/js?key=@Model.GoogleMapsAPIKey&libraries=geometry,marker,places&callback=initMap"></script>

    <script type="module">
        import { addMarker } from '/js/map.js';

        // Pass API key, Map ID, and markers data to JavaScript
        window.mapConfig = {
            apiKey: '@Model.GoogleMapsAPIKey',
            mapId: '@Model.GoogleMapsMapId',
           
        };

        console.log('Map config:', window.mapConfig);

        // Call addMarker for each marker after map initializes
        window.addEventListener('mapInitialized', () => {
            console.log('mapInitialized event fired, adding markers:', window.mapConfig.markers);
            window.mapConfig.markers.forEach(data => {
                addMarker(data.lat, data.lng, data.color, data.title);
            });

            //add current location
            getCurrentLocation();
        });
    </script>

    <!-- Load map.js -->
    <script type="module" src="/js/map.js"></script>

   @* <script>
   var addressInput = document.querySelector('#home-address');
   document.addEventListener('DOMContentLoaded',function(){
    var autoComplete = new google.maps.places.Autocomplete(addressInput.{
        componentRestrictions: {country:'us'}

    });
    autoComplete.addListener('place_changed',function(){
        var nearPlace = autoComplete.getPlace();
    });
   });
   </script> *@
  
}